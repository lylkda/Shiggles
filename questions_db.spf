<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>ContentFilters</key>
	<dict/>
	<key>auto_connect</key>
	<true/>
	<key>data</key>
	<dict>
		<key>connection</key>
		<dict>
			<key>database</key>
			<string>shiggles_db</string>
			<key>host</key>
			<string>127.0.0.1</string>
			<key>name</key>
			<string>localhost</string>
			<key>port</key>
			<integer>8889</integer>
			<key>rdbms_type</key>
			<string>mysql</string>
			<key>sslCACertFileLocation</key>
			<string></string>
			<key>sslCACertFileLocationEnabled</key>
			<integer>0</integer>
			<key>sslCertificateFileLocation</key>
			<string></string>
			<key>sslCertificateFileLocationEnabled</key>
			<integer>0</integer>
			<key>sslKeyFileLocation</key>
			<string></string>
			<key>sslKeyFileLocationEnabled</key>
			<integer>0</integer>
			<key>type</key>
			<string>SPTCPIPConnection</string>
			<key>useSSL</key>
			<integer>0</integer>
			<key>user</key>
			<string>root</string>
		</dict>
		<key>session</key>
		<dict>
			<key>connectionEncoding</key>
			<string>utf8</string>
			<key>contentPageNumber</key>
			<integer>1</integer>
			<key>contentSelection</key>
			<data>
			YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFy
			Y2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJX
			TlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAF
			gAdUdHlwZVRyb3dzXxAdU2VsZWN0aW9uRGV0YWlsVHlwZU5TSW5k
			ZXhTZXTSFwsYGVxOU1JhbmdlQ291bnQQAIAG0hscHR5aJGNsYXNz
			bmFtZVgkY2xhc3Nlc1pOU0luZGV4U2V0oh8gWk5TSW5kZXhTZXRY
			TlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVk
			QXJjaGl2ZXLRJidUZGF0YYABAAgAEQAaACMALQAyADcAQABGAE0A
			VQBgAGcAagBsAG4AcQBzAHUAdwB8AIEAoQCmALMAtQC3ALwAxwDQ
			ANsA3gDpAPIA9wEEAQcBGQEcASEAAAAAAAACAQAAAAAAAAAoAAAA
			AAAAAAAAAAAAAAABIw==
			</data>
			<key>contentSortColIsAsc</key>
			<true/>
			<key>contentViewport</key>
			<string>{{0, 0}, {694, 456}}</string>
			<key>isToolbarVisible</key>
			<true/>
			<key>queries</key>
			<string>DROP DATABASE IF EXISTS shiggles_db;
CREATE DATABASE shiggles_db;
USE shiggles_db;

CREATE TABLE userData (
	username VARCHAR(50) NOT NULL,
	questionID INTEGER(50),
	answer VARCHAR(50),
	guess VARCHAR(50)
);

CREATE TABLE compQuestions (
	question VARCHAR(200),
	answer1 VARCHAR(75),
	answer2 VARCHAR(75),
	questionID INTEGER(50),
	winner VARCHAR(75) NOT NULL
);

CREATE TABLE NewQuestion (
	question VARCHAR(200) NOT NULL,
	answer1 VARCHAR(75) NOT NULL,
	answer2 VARCHAR(75) NOT NULL,
	questionID INTEGER(50) AUTO_INCREMENT NOT NULL,
	PRIMARY KEY (questionID),
	isCurrent BOOLEAN DEFAULT false,
	a1Votes INTEGER(10),
	a2Votes INTEGER(10)
);

INSERT INTO questions (question, answer1, answer2)
VALUES ("What is better, cats or dogs?", "cats", "dogs");
INSERT INTO questions (question, answer1, answer2)
VALUES ("Pie vs cake?", "Pie!", "Cake!");
INSERT INTO questions (question, answer1, answer2)
VALUES ("What tastes better, oranges or apples?", "Oranges forever!", "Glorious Apples!");

SELECT * FROM questions;</string>
			<key>view</key>
			<string>SP_VIEW_CUSTOMQUERY</string>
			<key>windowVerticalDividerPosition</key>
			<real>200</real>
		</dict>
	</dict>
	<key>encrypted</key>
	<false/>
	<key>format</key>
	<string>connection</string>
	<key>queryFavorites</key>
	<array/>
	<key>queryHistory</key>
	<array>
		<string>SELECT * FROM questions</string>
		<string>INSERT INTO questions (question, answer1, answer2)
VALUES ("What tastes better, oranges or apples?", "Oranges forever!", "Glorious Apples!")</string>
		<string>INSERT INTO questions (question, answer1, answer2)
VALUES ("Pie vs cake?", "Pie!", "Cake!")</string>
		<string>INSERT INTO questions (question, answer1, answer2)
VALUES ("What is better, cats or dogs?", "cats", "dogs")</string>
		<string>CREATE TABLE questions (
	question VARCHAR(200) NOT NULL,
	answer1 VARCHAR(75) NOT NULL,
	answer2 VARCHAR(75) NOT NULL,
	questionID INTEGER(50) AUTO_INCREMENT NOT NULL,
	PRIMARY KEY (questionID),
	isCurrent BOOLEAN DEFAULT false,
	a1Votes INTEGER(10),
	a2Votes INTEGER(10)
)</string>
		<string>CREATE TABLE questions (
	question VARCHAR(200) NOT NULL,
	answer1 VARCHAR(75) NOT NULL,
	answer2 VARCHAR(75) NOT NULL,
	questionID INTEGER(11) AUTO_INCREMENT NOT NULL,
	PRIMARY KEY questionID,
	isCurrent BOOLEAN DEFAULT false,
	a1Votes INTEGER(10),
	a2Votes INTEGER(10)
)</string>
		<string>CREATE TABLE questions (
	questionID INTEGER(50) AUTO_INCREMENT NOT NULL,
	PRIMARY KEY questionID,
	question VARCHAR(200) NOT NULL,
	answer1 VARCHAR(75) NOT NULL,
	answer2 VARCHAR(75) NOT NULL,
	isCurrent BOOLEAN,
	a1Votes INTEGER(10),
	a2Votes INTEGER(10)
)</string>
		<string>CREATE TABLE questions (
	question VARCHAR(200) NOT NULL,
	answer1 VARCHAR(75) NOT NULL,
	answer2 VARCHAR(75) NOT NULL,
	questionID INTEGER(50) AUTO_INCREMENT NOT NULL,
	PRIMARY KEY questionID,
	isCurrent BOOLEAN,
	a1Votes INTEGER(10),
	a2Votes INTEGER(10)
)</string>
		<string>CREATE TABLE questions (
	question VARCHAR(200) NOT NULL,
	answer1 VARCHAR(75) NOT NULL,
	answer2 VARCHAR(75) NOT NULL,
	questionID INTEGER(50) AUTO_INCREMENT NOT NULL,
	PRIMARY KEY questionID,
	isCurrentQ BOOLEAN,
	a1Votes INTEGER(10),
	a2Votes INTEGER(10)
)</string>
		<string>CREATE TABLE questions (
	question VARCHAR(200) NOT NULL,
	answer1 VARCHAR(75) NOT NULL,
	answer2 VARCHAR(75) NOT NULL,
	questionID INTEGER(50) AUTO_INCREMENT NOT NULL,
	PRIMARY KEY questionID,
	isCurrentQ BOOLEAN DEFAULT false,
	a1Votes INTEGER(10),
	a2Votes INTEGER(10)
)</string>
		<string>CREATE TABLE compQuestions (
	question VARCHAR(200),
	answer1 VARCHAR(75),
	answer2 VARCHAR(75),
	questionID INTEGER(50),
	winner VARCHAR(75) NOT NULL
)</string>
		<string>CREATE TABLE userData (
	username VARCHAR(50) NOT NULL,
	questionID INTEGER(10),
	answer VARCHAR(50),
	guess VARCHAR(50)
	)</string>
		<string>DROP DATABASE IF EXISTS shiggles_db;
CREATE DATABASE shiggles_db;
USE shiggles_db</string>
		<string>DELETE DATABASE IF EXISTS shiggles_db</string>
		<string>SELECT * FROM Posts</string>
		<string>DROP DATABASE IF EXISTS blogger;
CREATE DATABASE blogger;
USE blogger</string>
		<string>DROP DATABASE IF EXISTS todolist;
CREATE DATABASE todolist;
USE todolist</string>
		<string>DROP DATABASE IF EXISTS todolist</string>
		<string>USE todolist</string>
		<string>USE DATABASE todolist</string>
	</array>
	<key>rdbms_type</key>
	<string>mysql</string>
	<key>rdbms_version</key>
	<string>5.6.35</string>
	<key>version</key>
	<integer>1</integer>
</dict>
</plist>
